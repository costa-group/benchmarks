module Examples;

/*
  - Typed-norms no encuentra UB, posiblemente por el uso de max:
      UB for foo5(l_1) = c(failed(no_rf,[scc=0,cr=foo5/1]))
     
  - Term-size SI encuentra UB:
      UB for foo5(l) = 5+6*nat(l/2-3/2)
     
  - Term-depth no encuentra UB:
      UB for foo5(l) = c(failed(no_rf,[scc=0,cr=foo5/1]))

     
*/
def List<List<Int>> foo5(List<List<Int>> l)
  = case l {
      Nil => Nil ;
      Cons(Nil,rest_l) => Cons(Nil,rest_l) ;
      Cons(Cons(x,xs),rest_l) => foo5(Cons(xs,rest_l)) ;
  };
  
  
def List<List<Int>> foo(List<List<Int>> l)
  = case l {
      Nil => Nil ;
      Cons(x,xs) => foo_p(x,xs);
  };
  
def List<List<Int>> foo_p(List<Int> x, List<List<Int>> xs)
  = case x {
      Nil => Cons(Nil,xs) ;
      Cons(a,as) => foo(Cons(as,xs)) ;
  };  
  
  
def List<List<Int>> foo_flat(List<List<Int>> l)
  = case l {
      Nil => Nil ;
      Cons(x,xs) => case x {
                      Nil => Cons(Nil,xs) ;
                      Cons(a,as) => foo_flat(Cons(as,xs)) ;
      };
  };           
  
  
/* 
   La x es innecesaria y desaparece de la UB:
   
   ?- costabs(['ub_functions/Raul.abs'],['f'],[size_abst = typed_norms]).
   (...)
    UB for f = 1
*/  
def Int f(List<Int> x) =
  3;  
  
{}
