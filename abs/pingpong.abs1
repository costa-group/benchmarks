/*
 * PingPong.abs -- PingPong example
 *
 */
module PingPong;

data Msg = NoMsg 
         | HelloPing 
         | Hello(Ping)
         | HowAreYou
         | Fine
         | Bye 
         ;

interface Ping {
    Unit m(Msg m);
    Unit run()	;
}

interface Pong {
    Unit hello(Ping ping);
    Bool m(Msg m);
}

class PingImpl(Pong pong) implements Ping {

    Unit run(){
      pong!hello(this); 
    }

    Unit m(Msg msg){
      Msg reply = case msg {
         HelloPing => HowAreYou;
         Fine => Bye; 
         Bye => NoMsg;
      };
      
      Fut<Bool> fu;
      if (reply != NoMsg) {
         fu = pong!m(reply);
      	 await fu?;
      	 fu.get;
      }
     }
} 

class PongImpl implements Pong {
    Ping ping;

    Unit hello(Ping ping) {
       this.ping = ping;
       ping!m(HelloPing);
    }

    Bool m(Msg msg){
       if (msg == HowAreYou)
           ping!m(Fine);
       else
           ping!m(Bye);
       return True;
    } 

}

{
    Ping ping;
    Pong pong;
     
    Int i=0;
    while (i < 1000) {
    pong = new PongImpl(); 
    ping = new PingImpl(pong); 
    i=i+1;
    }
    ping!run(); 
}

