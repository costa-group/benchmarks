module AwaitCond;

interface Ai{
    Bi getField();

}


interface Bi{
 Unit obtainFieldAndUse(Ai a);
 Unit setOtherField(Int x);
}
class A(Bi b) implements Ai{
Bi field1;

Unit run(){
Fut<Unit> f=b!setOtherField(1);
f.get;
field1= new local B();
}
Bi getField(){
   await field1!=null;
   return field1;
}
}




class B() implements Bi{
Int fx=0;
Unit obtainFieldAndUse(Ai a){
   Fut<Bi>f=a!getField();
   f.get;
}
Unit setOtherField(Int x){
   fx=x;
}

}

//main block
{
Bi b=new local  B();
Ai a=new A(b);
 

b.obtainFieldAndUse(a);

}


