module DeadLock;

interface A { 
    Unit initialize(B b);
    Unit is_init();
    Unit p();
  
}

interface B { 
    Unit q();
    Unit go(A a);
}


class Bimp implements B {

    Unit go(A a) {
         Fut<Unit> f=a!is_init();
         await f?;
	 f=a!p();
         f.get;
    }
 
    Unit q() {
	// ...
    }
}

class Aimp implements A {

    Bool initialized = False;

    Unit initialize(B b) {
      Fut<Unit> f= this!ini1(b);
      Fut<Unit> f2= this!ini2(b);
      await f?;
      await f2?;
      f = b!q();
      f.get;
      initialized=True;
    }
    Unit ini1(B b) {
       Fut<Unit> f=this!callQ(b);
       await f?;
       //Do something 1

    }
    Unit ini2(B b) {
       Fut<Unit> f=this!callQ(b);
       await f?;
      //Do something 2

    }
    Unit callQ(B b) {
      Fut<Unit> f = b!q();
      f.get;

    }

    Unit is_init() {
	await initialized;
    }

    Unit p() {
      // ...
    }

}

{
    A a=new Aimp();
    B b=new Bimp();
    a!initialize(b);
    b!go(a);
}
