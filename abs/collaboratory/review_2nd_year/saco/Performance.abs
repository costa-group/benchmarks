module DemoTraffic;
import * from ABS.StdLib;

/**
 * Distribution Level:
 * costabs deliverable/2ndReview/Performance.abs -entries C.distribution -cost_centers object
 *
 * Parallelism: 
 * costabs deliverable/2ndReview/Performance.abs -entries C.distribution -cost_model cogs
 * costabs deliverable/2ndReview/Performance.abs -entries C.parallelism -cost_model cogs
 * 
 * Traffic:
 * costabs deliverable/2ndReview/Performance.abs -entries C.distribution -cost_model traffic
 * 
 **/
interface II {
	Int work (List<Int> l);
}

class Master implements II {
 	Int work (List<Int> l){
 		Int n = 0;
 		while (l != Nil) {
			l = tail(l);
			n = n + 1;
  		}
  		return n;
 	}
}

class C {
	 Unit config1 (List<Int> l) {
		II m1 = new Master();
		II m2 = new Master();
		II m3 = new Master();
 		m1!work(l);
                m1!work(l);
                m1!work(l);
	 }
	 Unit config2 (List<Int> l) {
		II m1 = new Master();
		II m2 = new Master();
		II m3 = new Master();
 		m1!work(l);
                m2!work(l);
                m3!work(l);
	 }
	 
 	Unit config3 (List<Int> l, Int n) {
		while (n > 0) {
		    II m = new Master();
	 		m!work(l);
	 		n = n - 1;
	 	}
	 }


}
