module Running;
import * from ABS.StdLib;

interface MainTest {
		Unit main (Int n, Int m);
} 
class MainImpl implements MainTest {      
	Unit main (Int n, Int m) {      
		ServerInterface y = new local Server(null);   
		y!start(n,m);
	}
}

interface ServerInterface {
  Bool initDAO ();
  Unit start(Int n,Int m);
}

interface HandlerInterface {
	Unit run2 (Int m);
}

interface DAOInterface {
	Bool initDB ();
	Bool query(Int m);
}


class Server (DAOInterface dao) implements ServerInterface {  
  Unit start(Int n,Int m) {
    Fut<Bool> b = this!initDAO ();
    await b?;
    while(n > 0) {
      HandlerInterface h = new local Handler(this.dao);
      h!run2(m); 
      n = n - 1;
  	}  
  } 

  Bool initDAO () {
    this.dao = new local DAO (null);
    Fut<Bool> b = this.dao!initDB();
    await b?;
    return True; 
  }


} // class Server end

class Handler (DAOInterface dao) implements HandlerInterface {
  Unit run2 (Int m) {
    while(m>0) {
      this.dao!query(m); 
      m = m - 1;
    }
  }

}

class DAO (DBInterface db)  implements DAOInterface{
  Bool initDB () {
    this.db = new local DB();
    return True;
  }
  Bool query(Int m) {
    this.db!exec();
    return True;
  }
}

interface DBInterface {
  Unit exec();
} 
class DB () implements DBInterface{
  Unit exec() {
  }
}


{
	MainTest m = new local MainImpl ();
	m.main(10,20);
}	


