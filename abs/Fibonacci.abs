
module Fibonacci;
import * from ABS.StdLib;


interface A {
 Int fibo(Int n, A o1, A o2);
 Int fibo_aux(Int n);
}

interface B {
 Int m2(Int i,A o);
}


class AImpl() implements A {


 Int fibo_aux(Int n){
  Fut<Int> f1;
  Fut<Int> f2;
  Int r1=0;
  Int r2=0;
  Int r3=0;
  Int r4=0;
  Int r=0;
  if (n==0) r =1;
  else if (n==1) r=1;
  else {
    f1 = this ! fibo_aux(n-1);
    f2 = this ! fibo_aux(n-2);
    await f1?;
    await f2?;
    r1 = f1.get;
    r2 = f2.get;
    r=r1+r2;
  }
  return r;
 }

 Int fibo(Int n, A o1, A o2){
  Fut<Int> f1;
  Fut<Int> f2;
  Int r1=0;
  Int r2=0;
  Int r=0;
  f1 = o1 ! fibo_aux(n-1);
  f2 = o2 ! fibo_aux(n-2);
  await f1?;
  await f2?;
  r1 = f1.get;
  r2 = f2.get;
  r = r1 + r2;
  return r;
 }
}
