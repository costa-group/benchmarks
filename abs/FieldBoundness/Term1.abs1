module Term1;

//data List<A> = Nil | Cons(A, List<A>);

type ListInt = List<Int>;
type Elem = Int;

def Bool nonempty( ListInt l) =
  case l
  {
    Nil => False;
    Cons(_,_) => True;
  };

interface A {
  Unit add_element(Elem e);
  Unit add_elements(ListInt l);
  Unit del_element();
  Unit m();
  Unit processElement(Elem e);
  Unit f();
  Unit g();
  Unit h();
  Unit k();
  Unit meme();
  Unit lanza_loop();
  Unit loop_del();
  Unit loop_add(Elem e);
  Unit jeje(ListInt l);
}


class AImpl( ListInt list) implements A{

  Unit add_element( Elem e ){
    list = Cons( e, list );
  }
  
  Unit add_elements(ListInt l){
    while ( nonempty(l) ){
      this ! add_element( head(l) );
      l = tail(l);
    }
  }
  
  Unit del_element(){
    list = tail(list);
  }
  
  Unit m(){
    while ( nonempty(list) ){
      Elem e = head(list);
      list = tail(list);
      Fut<Unit> y;
      y = this ! processElement(e);
      await y?;
    }
  }
  
  Unit processElement( Elem e ){
    Int i = 10;
    Int pp = 1;
    while( i > 0 ){
      i = i - 1;
      pp = pp + i;
    }
  }
  
  Unit f(){
   this ! add_element( 1 );
   this ! add_element( 2 );
   this ! add_element( 3 );
   this ! m();
  }
  
  Unit g(){
    this ! add_elements( Cons(1, Cons( 2, Nil)) );
    this ! m();
  }
  
  Unit h(){
    this ! del_element();
    this ! del_element();
    this ! m();
  }
  
  Unit k(){
    this ! loop_del();
    this ! m();
  }
  
  Unit loop_del(){
    while (true){
      this ! del_element();
    }  
  }
  
  Unit loop_add(Elem e){
    while (true){
      this ! add_element(e);
    }
  }
  
  Unit meme(){
    this ! lanza_loop();
    this ! m();
  }
  
  Unit lanza_loop(){
    this ! loop_add(1);
  }
  
  Unit jeje(ListInt l){
    while ( nonempty(l) ){
      Elem e = head(l);
      l = tail(l);
      Fut<Unit> y;
      y = this ! processElement(e);
      await y?;
    }
  }
}

{
  A x;
  
  ListInt l = Cons(1, Cons( 2, Cons(3, Nil)));
  
  x = new local AImpl(l);
  //x ! add_element( 1 );
  //x ! add_element( 2 );
  //x ! add_element( 3 );
  //x ! m();
  //x ! g();
  //x ! h();
  //x ! k();
  x ! meme();
  x ! h();
}
