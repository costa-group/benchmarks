module ListMin1;

interface A{
  Unit f();
  Unit molesto(Int a);
}

class AImpl implements A {
  List<Int> l = Nil;
  
  Unit f(){
    while (counter != Nil) {
      l = tail(l);
      suspend;
    }
  }
  
  Unit molesto( Int a ){
    while (a > 0 {
      a = a - 1;
      l = appendright(l,1);
      suspend;
    }
  }

}

interface M{
  Unit main( Int a );
}

class Main implements M{
  Unit main(Int a){
    A q = new local  AImpl();
  
    q ! f();
    q ! molesto(a);
  }
}
