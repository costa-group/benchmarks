(11, 11, '32162', {'AgentImp.free': (True, '14+nat(max(sessions)/2-1/2)'), 'DatabaseImp.init': (True, '5'), 'SyncClient.run2': (True, '255+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)+5*nat(max(booksS)/2-1/2)+nat(max(booksS)/2+max(countriesS)/2-2)+nat(max(booksS)/2+max(countriesS)/2-2)'), 'SessionImp.order': (True, '176+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)'), 'Main.main': (True, '295+3*nat(main_nclients)+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)+5*nat(max(booksS)/2-1/2)+nat(max(booksS)/2+max(countriesS)/2-2)+nat(max(booksS)/2+max(countriesS)/2-2)+2*nat(main_cDB/4-1/4)'), 'AgentImp.init': (True, '3'), 'DatabaseImp.getInfo': (True, '40+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)'), 'DatabaseImp.confirmOrder': (True, '34+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)'), 'AgentImp.getsession': (True, '19'), 'SyncClient.init': (True, '9'), 'SessionImp.init': (True, '8')})
(11, 9, 415, {'AgentImp.free': (True, '10+5*nat(max(sessions)/2-1/2)'), 'DatabaseImp.init': (True, '5'), 'SyncClient.run2': (False, '142+5*c(maximize_failed)+5*c(maximize_failed)+c(maximize_failed)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2)'), 'SessionImp.order': (True, '35+nat(books/2-1/2)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2)'), 'Main.main': (False, '20+nat(main_nclients)* (165+5*nat(main_cDB/4-1/4)+5*c(maximize_failed)+5*c(maximize_failed)+c(maximize_failed)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2))'), 'AgentImp.init': (True, '3'), 'DatabaseImp.getInfo': (True, '11+nat(books/2-1/2)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))'), 'DatabaseImp.confirmOrder': (True, '7+nat(books/2-1/2)* (18+nat(max(booksDB)/7-1/7)* (13+9*nat(max(booksDB)/4-2))+9*nat(max(booksDB)/4-2))'), 'AgentImp.getsession': (True, '20'), 'SyncClient.init': (True, '9'), 'SessionImp.init': (True, '8')})
===============================================================
BOOKSHOP ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  11
Total UBs        :  11
Time             :  32162
+ UB for AgentImp.init = 3
+ UB for DatabaseImp.init = 5
+ UB for SyncClient.init = 9
+ UB for SessionImp.init = 8
+ UB for AgentImp.getsession = 19
+ UB for DatabaseImp.getInfo = 40+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)
+ UB for DatabaseImp.confirmOrder = 34+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)
+ UB for AgentImp.free = 14+nat(max(sessions)/2-1/2)
+ UB for SessionImp.order = 176+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)
+ UB for SyncClient.run2 = 255+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)+5*nat(max(booksS)/2-1/2)+nat(max(booksS)/2+max(countriesS)/2-2)+nat(max(booksS)/2+max(countriesS)/2-2)
+ UB for Main.main = 295+3*nat(main_nclients)+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)+5*nat(max(booksS)/2-1/2)+nat(max(booksS)/2+max(countriesS)/2-2)+nat(max(booksS)/2+max(countriesS)/2-2)+2*nat(main_cDB/4-1/4)



ORIGINAL COST
-----------------------------
Valid UBs         :  9
Total UBs         :  11
Time              :  415
+ UB for AgentImp.init = 3
+ UB for DatabaseImp.init = 5
+ UB for SyncClient.init = 9
+ UB for SessionImp.init = 8
+ UB for AgentImp.getsession = 20
+ UB for DatabaseImp.getInfo = 11+nat(books/2-1/2)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))
+ UB for DatabaseImp.confirmOrder = 7+nat(books/2-1/2)* (18+nat(max(booksDB)/7-1/7)* (13+9*nat(max(booksDB)/4-2))+9*nat(max(booksDB)/4-2))
+ UB for AgentImp.free = 10+5*nat(max(sessions)/2-1/2)
+ UB for SessionImp.order = 35+nat(books/2-1/2)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2)
- UB for SyncClient.run2 = 142+5*c(maximize_failed)+5*c(maximize_failed)+c(maximize_failed)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2)
- UB for Main.main = 20+nat(main_nclients)* (165+5*nat(main_cDB/4-1/4)+5*c(maximize_failed)+5*c(maximize_failed)+c(maximize_failed)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2))



Comparison
~~~~~~~~~~~
AgentImp.init :  RG == OC,constant
    RG: 3
    OC: 3

DatabaseImp.init :  RG == OC,constant
    RG: 5
    OC: 5

SyncClient.init :  RG == OC,constant
    RG: 9
    OC: 9

SessionImp.init :  RG == OC,constant
    RG: 8
    OC: 8

AgentImp.getsession :  RG <= OC,constant
    RG: 19
    OC: 20

DatabaseImp.getInfo :  different_vars,incomparable([max(booksDB),max(booksS)],[max(booksDB),books])
    RG: 40+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)
    OC: 11+nat(books/2-1/2)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))

DatabaseImp.confirmOrder :  different_vars,incomparable([max(booksDB),max(info)],[max(booksDB),books])
    RG: 34+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)
    OC: 7+nat(books/2-1/2)* (18+nat(max(booksDB)/7-1/7)* (13+9*nat(max(booksDB)/4-2))+9*nat(max(booksDB)/4-2))

AgentImp.free :  RG != OC,ratio(0.24065637845943436)
    RG: 14+nat(max(sessions)/2-1/2)
    OC: 10+5*nat(max(sessions)/2-1/2)

SessionImp.order :  different_vars,incomparable([max(booksS),max(booksDB),max(info),max(sessions)],[max(sessions),max(booksDB),books])
    RG: 176+nat(max(sessions)/2-1/2)+2*nat(max(info)/4-1/4)+nat(max(info)/2-1/2)+nat(max(booksDB)/7-1/7)* (19+nat(max(booksDB)/4-2))+nat(max(booksDB)/4-2)+2*nat(max(info)/4-1/4)+4*nat(max(info)/7-1/7)+3*nat(max(info)/7-1/7)+2*nat(max(booksS)/2-1/2)+nat(max(booksDB)/4-1/4)+6*nat(max(booksDB)/2-1/2)+2*nat(max(booksDB)/4-1/4)
    OC: 35+nat(books/2-1/2)* (24+5*nat(max(booksDB)/4-1/4)+7*nat(max(booksDB)/2-1/2)+4*nat(max(booksDB)/4-1/4))+5*nat(max(sessions)/2-1/2)

RESUMEN
#Constantes: 5
#Comparables: 1
#Incomparables: 3
(8, 8, '456', {'BoundedBuffer.append': (True, '18+nat(max(buffer)/2-3/2)'), 'BoundedBuffer.remove': (True, '17'), 'ConsumerImpl.init': (True, '2'), 'Main.main': (True, '89+3*nat(main_mcons)+3*nat(main_mreq)+3*nat(main_nprod)+3*nat(main_nreq)+nat(max(buffer)/2-3/2)'), 'ProducerImpl.loop': (True, '29+3*nat(main_nreq)+nat(max(buffer)/2-3/2)'), 'ConsumerImpl.loop': (True, '28+3*nat(main_mreq)'), 'ProducerImpl.init': (True, '2'), 'BoundedBuffer.init': (True, '4')})
(8, 8, 143, {'BoundedBuffer.append': (True, '14+5*nat(max(buffer)/2-1/2)'), 'BoundedBuffer.remove': (True, '17'), 'ConsumerImpl.init': (True, '2'), 'Main.main': (True, '17+nat(main_nprod)* (18+nat(main_nreq)* (22+5*nat(max(buffer)/2-1/2)))+nat(main_mcons)* (18+25*nat(main_mreq))'), 'ProducerImpl.loop': (True, '6+nat(d)* (22+5*nat(max(buffer)/2-1/2))'), 'ConsumerImpl.loop': (True, '6+25*nat(d)'), 'ProducerImpl.init': (True, '2'), 'BoundedBuffer.init': (True, '4')})
===============================================================
BOUNDEDBUFFER ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  8
Total UBs        :  8
Time             :  456
+ UB for BoundedBuffer.init = 4
+ UB for ProducerImpl.init = 2
+ UB for BoundedBuffer.append = 18+nat(max(buffer)/2-3/2)
+ UB for ProducerImpl.loop = 29+3*nat(main_nreq)+nat(max(buffer)/2-3/2)
+ UB for ConsumerImpl.init = 2
+ UB for BoundedBuffer.remove = 17
+ UB for ConsumerImpl.loop = 28+3*nat(main_mreq)
+ UB for Main.main = 89+3*nat(main_mcons)+3*nat(main_mreq)+3*nat(main_nprod)+3*nat(main_nreq)+nat(max(buffer)/2-3/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  8
Total UBs         :  8
Time              :  143
+ UB for BoundedBuffer.init = 4
+ UB for ProducerImpl.init = 2
+ UB for BoundedBuffer.append = 14+5*nat(max(buffer)/2-1/2)
+ UB for ProducerImpl.loop = 6+nat(d)* (22+5*nat(max(buffer)/2-1/2))
+ UB for ConsumerImpl.init = 2
+ UB for BoundedBuffer.remove = 17
+ UB for ConsumerImpl.loop = 6+25*nat(d)
+ UB for Main.main = 17+nat(main_nprod)* (18+nat(main_nreq)* (22+5*nat(max(buffer)/2-1/2)))+nat(main_mcons)* (18+25*nat(main_mreq))



Comparison
~~~~~~~~~~~
BoundedBuffer.init :  RG == OC,constant
    RG: 4
    OC: 4

ProducerImpl.init :  RG == OC,constant
    RG: 2
    OC: 2

BoundedBuffer.append :  RG != OC,ratio(0.2355463337209356)
    RG: 18+nat(max(buffer)/2-3/2)
    OC: 14+5*nat(max(buffer)/2-1/2)

ProducerImpl.loop :  different_vars,incomparable([max(buffer),main_nreq],[max(buffer),d])
    RG: 29+3*nat(main_nreq)+nat(max(buffer)/2-3/2)
    OC: 6+nat(d)* (22+5*nat(max(buffer)/2-1/2))

ConsumerImpl.init :  RG == OC,constant
    RG: 2
    OC: 2

BoundedBuffer.remove :  RG == OC,constant
    RG: 17
    OC: 17

ConsumerImpl.loop :  different_vars,incomparable([main_mreq],[d])
    RG: 28+3*nat(main_mreq)
    OC: 6+25*nat(d)

Main.main :  RG != OC,ratio(8.875660575805582e-5)
    RG: 89+3*nat(main_mcons)+3*nat(main_mreq)+3*nat(main_nprod)+3*nat(main_nreq)+nat(max(buffer)/2-3/2)
    OC: 17+nat(main_nprod)* (18+nat(main_nreq)* (22+5*nat(max(buffer)/2-1/2)))+nat(main_mcons)* (18+25*nat(main_mreq))

RESUMEN
#Constantes: 4
#Comparables: 2
#Incomparables: 2
(34, 34, '8011', {'ClientGUIImpl.init': (True, '7'), 'TextFieldImpl.getText': (True, '2'), 'ClientImpl.receive': (True, '32+2*nat(max(sessions)/2-1/2)'), 'ServerImpl.sessionClosed': (True, '12+2*nat(max(sessions)/2-1/2)'), 'TextFieldImpl.init': (True, '2'), 'ClientGUIImpl.getClientIntern': (True, '2'), 'ClientGUIImpl.getTextFieldText': (True, '6'), 'ServerImpl.start': (True, '3'), 'ClientImpl.setServer': (True, '3'), 'SendButtonListener.pressed': (True, '24'), 'ButtonImpl.press': (True, '43+4*nat(max(listener)/2-1/2)* (1+nat(main_nclients))'), 'ServerImpl.init': (True, '3'), 'UserImpl.use': (True, '68+4*nat(max(listener)/2-1/2)* (1+nat(main_nclients))'), 'SendButtonListener.init': (True, '2'), 'ButtonImpl.init': (True, '4'), 'TextFieldImpl.setText': (True, '3'), 'WindowImpl.newButton': (True, '7'), 'ClientImpl.sendText': (True, '9'), 'ClientImpl.init': (True, '2'), 'UserImpl.init': (True, '1'), 'SessionImpl.init2': (True, '37+2*nat(max(sessions)/2-1/2)'), 'ClientImpl.start': (True, '55+2*nat(max(sessions)/2-1/2)'), 'WindowImpl.init': (True, '1'), 'SessionImpl.receive': (True, '2'), 'ClientGUIImpl.getTextField': (True, '3'), 'SessionImpl.close': (True, '16+2*nat(max(sessions)/2-1/2)'), 'Main.main': (True, '219+3*nat(main_nclients)+4*nat(max(listener)/2-1/2)* (1+nat(main_nclients))+nat(max(listener)/2-1)+2*nat(max(sessions)/2-1/2)'), 'ClientGUIImpl.init2': (True, '44+nat(max(listener)/2-1)'), 'SessionImpl.init': (True, '3'), 'ClientImpl.getGUI': (True, '63+nat(max(listener)/2-1)'), 'ButtonImpl.registerListener': (True, '14+nat(max(listener)/2-1)'), 'ClientGUIImpl.getSendButton': (True, '3'), 'ServerImpl.connect': (True, '47+2*nat(max(sessions)/2-1/2)'), 'WindowImpl.newTextField': (True, '5')})
(34, 31, 130, {'ClientGUIImpl.init': (True, '8'), 'TextFieldImpl.getText': (True, '2'), 'ClientImpl.receive': (True, '28+6*nat(max(sessions)/2-1/2)'), 'ServerImpl.sessionClosed': (True, '8+6*nat(max(sessions)/2-1/2)'), 'TextFieldImpl.init': (True, '2'), 'ClientGUIImpl.getClientIntern': (True, '2'), 'ClientGUIImpl.getTextFieldText': (True, '6'), 'ServerImpl.start': (True, '3'), 'ClientImpl.setServer': (True, '3'), 'SendButtonListener.pressed': (True, '24'), 'ButtonImpl.press': (False, '3+c(failed(no_rf,[scc=11,cr=entrywhile_0/4]))'), 'ServerImpl.init': (True, '3'), 'UserImpl.use': (False, '28+c(failed(no_rf,[scc=11,cr=entrywhile_0/4]))'), 'SendButtonListener.init': (True, '2'), 'ButtonImpl.init': (True, '4'), 'TextFieldImpl.setText': (True, '3'), 'WindowImpl.newButton': (True, '8'), 'ClientImpl.sendText': (True, '9'), 'ClientImpl.init': (True, '2'), 'UserImpl.init': (True, '1'), 'SessionImpl.init2': (True, '33+6*nat(max(sessions)/2-1/2)'), 'ClientImpl.start': (True, '52+6*nat(max(sessions)/2-1/2)'), 'WindowImpl.init': (True, '1'), 'SessionImpl.receive': (True, '2'), 'ClientGUIImpl.getTextField': (True, '3'), 'SessionImpl.close': (True, '12+6*nat(max(sessions)/2-1/2)'), 'Main.main': (False, '16+nat(main_nclients)* (167+6*nat(max(sessions)/2-1/2)+5*nat(max(listener)/2-1/2)+c(failed(no_rf,[scc=11,cr=entrywhile_0/4])))'), 'ClientGUIImpl.init2': (True, '43+5*nat(max(listener)/2-1/2)'), 'SessionImpl.init': (True, '3'), 'ClientImpl.getGUI': (True, '64+5*nat(max(listener)/2-1/2)'), 'ButtonImpl.registerListener': (True, '10+5*nat(max(listener)/2-1/2)'), 'ClientGUIImpl.getSendButton': (True, '3'), 'ServerImpl.connect': (True, '44+6*nat(max(sessions)/2-1/2)'), 'WindowImpl.newTextField': (True, '6')})
===============================================================
CHAT ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  34
Total UBs        :  34
Time             :  8011
+ UB for ServerImpl.init = 3
+ UB for ServerImpl.start = 3
+ UB for WindowImpl.init = 1
+ UB for ClientGUIImpl.init = 7
+ UB for ButtonImpl.registerListener = 14+nat(max(listener)/2-1)
+ UB for SendButtonListener.init = 2
+ UB for ButtonImpl.init = 4
+ UB for WindowImpl.newButton = 7
+ UB for TextFieldImpl.init = 2
+ UB for WindowImpl.newTextField = 5
+ UB for ClientGUIImpl.init2 = 44+nat(max(listener)/2-1)
+ UB for ClientImpl.getGUI = 63+nat(max(listener)/2-1)
+ UB for ClientImpl.init = 2
+ UB for ClientImpl.setServer = 3
+ UB for SessionImpl.init = 3
+ UB for ServerImpl.sessionClosed = 12+2*nat(max(sessions)/2-1/2)
+ UB for SessionImpl.close = 16+2*nat(max(sessions)/2-1/2)
+ UB for SessionImpl.receive = 2
+ UB for ClientImpl.receive = 32+2*nat(max(sessions)/2-1/2)
+ UB for SessionImpl.init2 = 37+2*nat(max(sessions)/2-1/2)
+ UB for ServerImpl.connect = 47+2*nat(max(sessions)/2-1/2)
+ UB for ClientImpl.start = 55+2*nat(max(sessions)/2-1/2)
+ UB for UserImpl.init = 1
+ UB for ClientGUIImpl.getClientIntern = 2
+ UB for TextFieldImpl.getText = 2
+ UB for ClientGUIImpl.getTextFieldText = 6
+ UB for ClientImpl.sendText = 9
+ UB for SendButtonListener.pressed = 24
+ UB for ButtonImpl.press = 43+4*nat(max(listener)/2-1/2)* (1+nat(main_nclients))
+ UB for ClientGUIImpl.getSendButton = 3
+ UB for ClientGUIImpl.getTextField = 3
+ UB for TextFieldImpl.setText = 3
+ UB for UserImpl.use = 68+4*nat(max(listener)/2-1/2)* (1+nat(main_nclients))
+ UB for Main.main = 219+3*nat(main_nclients)+4*nat(max(listener)/2-1/2)* (1+nat(main_nclients))+nat(max(listener)/2-1)+2*nat(max(sessions)/2-1/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  31
Total UBs         :  34
Time              :  130
+ UB for ServerImpl.init = 3
+ UB for ServerImpl.start = 3
+ UB for WindowImpl.init = 1
+ UB for ClientGUIImpl.init = 8
+ UB for ButtonImpl.registerListener = 10+5*nat(max(listener)/2-1/2)
+ UB for SendButtonListener.init = 2
+ UB for ButtonImpl.init = 4
+ UB for WindowImpl.newButton = 8
+ UB for TextFieldImpl.init = 2
+ UB for WindowImpl.newTextField = 6
+ UB for ClientGUIImpl.init2 = 43+5*nat(max(listener)/2-1/2)
+ UB for ClientImpl.getGUI = 64+5*nat(max(listener)/2-1/2)
+ UB for ClientImpl.init = 2
+ UB for ClientImpl.setServer = 3
+ UB for SessionImpl.init = 3
+ UB for ServerImpl.sessionClosed = 8+6*nat(max(sessions)/2-1/2)
+ UB for SessionImpl.close = 12+6*nat(max(sessions)/2-1/2)
+ UB for SessionImpl.receive = 2
+ UB for ClientImpl.receive = 28+6*nat(max(sessions)/2-1/2)
+ UB for SessionImpl.init2 = 33+6*nat(max(sessions)/2-1/2)
+ UB for ServerImpl.connect = 44+6*nat(max(sessions)/2-1/2)
+ UB for ClientImpl.start = 52+6*nat(max(sessions)/2-1/2)
+ UB for UserImpl.init = 1
+ UB for ClientGUIImpl.getClientIntern = 2
+ UB for TextFieldImpl.getText = 2
+ UB for ClientGUIImpl.getTextFieldText = 6
+ UB for ClientImpl.sendText = 9
+ UB for SendButtonListener.pressed = 24
- UB for ButtonImpl.press = 3+c(failed(no_rf,[scc=11,cr=entrywhile_0/4]))
+ UB for ClientGUIImpl.getSendButton = 3
+ UB for ClientGUIImpl.getTextField = 3
+ UB for TextFieldImpl.setText = 3
- UB for UserImpl.use = 28+c(failed(no_rf,[scc=11,cr=entrywhile_0/4]))
- UB for Main.main = 16+nat(main_nclients)* (167+6*nat(max(sessions)/2-1/2)+5*nat(max(listener)/2-1/2)+c(failed(no_rf,[scc=11,cr=entrywhile_0/4])))



Comparison
~~~~~~~~~~~
ServerImpl.init :  RG == OC,constant
    RG: 3
    OC: 3

ServerImpl.start :  RG == OC,constant
    RG: 3
    OC: 3

WindowImpl.init :  RG == OC,constant
    RG: 1
    OC: 1

ClientGUIImpl.init :  RG <= OC,constant
    RG: 7
    OC: 8

ButtonImpl.registerListener :  RG != OC,ratio(0.22975318842418982)
    RG: 14+nat(max(listener)/2-1)
    OC: 10+5*nat(max(listener)/2-1/2)

SendButtonListener.init :  RG == OC,constant
    RG: 2
    OC: 2

ButtonImpl.init :  RG == OC,constant
    RG: 4
    OC: 4

WindowImpl.newButton :  RG <= OC,constant
    RG: 7
    OC: 8

TextFieldImpl.init :  RG == OC,constant
    RG: 2
    OC: 2

WindowImpl.newTextField :  RG <= OC,constant
    RG: 5
    OC: 6

ClientGUIImpl.init2 :  RG != OC,ratio(0.26114746398519467)
    RG: 44+nat(max(listener)/2-1)
    OC: 43+5*nat(max(listener)/2-1/2)

ClientImpl.getGUI :  RG <= OC,ratio(0.2768607708946511)
    RG: 63+nat(max(listener)/2-1)
    OC: 64+5*nat(max(listener)/2-1/2)

ClientImpl.init :  RG == OC,constant
    RG: 2
    OC: 2

ClientImpl.setServer :  RG == OC,constant
    RG: 3
    OC: 3

SessionImpl.init :  RG == OC,constant
    RG: 3
    OC: 3

ServerImpl.sessionClosed :  RG != OC,ratio(0.3717645419881313)
    RG: 12+2*nat(max(sessions)/2-1/2)
    OC: 8+6*nat(max(sessions)/2-1/2)

SessionImpl.close :  RG != OC,ratio(0.3523756181798421)
    RG: 16+2*nat(max(sessions)/2-1/2)
    OC: 12+6*nat(max(sessions)/2-1/2)

SessionImpl.receive :  RG == OC,constant
    RG: 2
    OC: 2

ClientImpl.receive :  RG != OC,ratio(0.3661841761070712)
    RG: 32+2*nat(max(sessions)/2-1/2)
    OC: 28+6*nat(max(sessions)/2-1/2)

SessionImpl.init2 :  RG != OC,ratio(0.37112117010666135)
    RG: 37+2*nat(max(sessions)/2-1/2)
    OC: 33+6*nat(max(sessions)/2-1/2)

ServerImpl.connect :  RG != OC,ratio(0.3783109116088591)
    RG: 47+2*nat(max(sessions)/2-1/2)
    OC: 44+6*nat(max(sessions)/2-1/2)

ClientImpl.start :  RG != OC,ratio(0.38127325679072954)
    RG: 55+2*nat(max(sessions)/2-1/2)
    OC: 52+6*nat(max(sessions)/2-1/2)

UserImpl.init :  RG == OC,constant
    RG: 1
    OC: 1

ClientGUIImpl.getClientIntern :  RG == OC,constant
    RG: 2
    OC: 2

TextFieldImpl.getText :  RG == OC,constant
    RG: 2
    OC: 2

ClientGUIImpl.getTextFieldText :  RG == OC,constant
    RG: 6
    OC: 6

ClientImpl.sendText :  RG == OC,constant
    RG: 9
    OC: 9

SendButtonListener.pressed :  RG == OC,constant
    RG: 24
    OC: 24

ClientGUIImpl.getSendButton :  RG == OC,constant
    RG: 3
    OC: 3

ClientGUIImpl.getTextField :  RG == OC,constant
    RG: 3
    OC: 3

TextFieldImpl.setText :  RG == OC,constant
    RG: 3
    OC: 3

RESUMEN
#Constantes: 22
#Comparables: 9
#Incomparables: 0
(10, 10, '416', {'Test.m': (True, '351+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)'), 'Node.init': (True, '2'), 'Node.putData': (True, '13+4*nat(max(map)/4-1/4)'), 'DistHT.init': (True, '3'), 'Main.main': (True, '712+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)'), 'DistHT.putData': (True, '33+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)'), 'Test.init': (True, '1'), 'Node.getData': (True, '8+nat(max(map)/4-1/4)'), 'DistHT.getAllData': (True, '87+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)'), 'DistHT.lookupNode': (True, '16+4*nat(max(nodes)/2-3/2)')})
(10, 10, 243, {'Test.m': (True, '160+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))'), 'Node.init': (True, '2'), 'Node.putData': (True, '10+7*nat(max(map)/4-1/4)'), 'DistHT.init': (True, '3'), 'Main.main': (True, '332+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))'), 'DistHT.putData': (True, '25+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)'), 'Test.init': (True, '1'), 'Node.getData': (True, '5+4*nat(max(map)/4-1/4)'), 'DistHT.getAllData': (True, '6+nat(keys/2-1/2)* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))'), 'DistHT.lookupNode': (True, '11+9*nat(max(nNodes)-1)')})
===============================================================
DISTHT ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  10
Total UBs        :  10
Time             :  416
+ UB for Test.init = 1
+ UB for DistHT.lookupNode = 16+4*nat(max(nodes)/2-3/2)
+ UB for Node.getData = 8+nat(max(map)/4-1/4)
+ UB for DistHT.getAllData = 87+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
+ UB for DistHT.init = 3
+ UB for Node.putData = 13+4*nat(max(map)/4-1/4)
+ UB for DistHT.putData = 33+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
+ UB for Node.init = 2
+ UB for Test.m = 351+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
+ UB for Main.main = 712+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  10
Total UBs         :  10
Time              :  243
+ UB for Test.init = 1
+ UB for DistHT.lookupNode = 11+9*nat(max(nNodes)-1)
+ UB for Node.getData = 5+4*nat(max(map)/4-1/4)
+ UB for DistHT.getAllData = 6+nat(keys/2-1/2)* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))
+ UB for DistHT.init = 3
+ UB for Node.putData = 10+7*nat(max(map)/4-1/4)
+ UB for DistHT.putData = 25+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)
+ UB for Node.init = 2
+ UB for Test.m = 160+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))
+ UB for Main.main = 332+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))



Comparison
~~~~~~~~~~~
Test.init :  RG == OC,constant
    RG: 1
    OC: 1

DistHT.lookupNode :  different_vars,incomparable([max(nodes)],[max(nNodes)])
    RG: 16+4*nat(max(nodes)/2-3/2)
    OC: 11+9*nat(max(nNodes)-1)

Node.getData :  RG != OC,ratio(0.27830231424235174)
    RG: 8+nat(max(map)/4-1/4)
    OC: 5+4*nat(max(map)/4-1/4)

DistHT.getAllData :  different_vars,incomparable([max(nodes),max(map)],[max(map),max(nNodes),keys])
    RG: 87+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
    OC: 6+nat(keys/2-1/2)* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))

DistHT.init :  RG == OC,constant
    RG: 3
    OC: 3

Node.putData :  RG != OC,ratio(0.5946934802076939)
    RG: 13+4*nat(max(map)/4-1/4)
    OC: 10+7*nat(max(map)/4-1/4)

DistHT.putData :  different_vars,incomparable([max(nodes),max(map)],[max(map),max(nNodes)])
    RG: 33+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
    OC: 25+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)

Node.init :  RG == OC,constant
    RG: 2
    OC: 2

Test.m :  different_vars,incomparable([max(nodes),max(map)],[max(map),max(nNodes)])
    RG: 351+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
    OC: 160+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))

Main.main :  different_vars,incomparable([max(nodes),max(map)],[max(map),max(nNodes)])
    RG: 712+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)+4*nat(max(map)/4-1/4)+4*nat(max(nodes)/2-3/2)
    OC: 332+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+9*nat(max(nNodes)-1)+7*nat(max(map)/4-1/4)+3/2* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))+7* (37+9*nat(max(nNodes)-1)+4*nat(max(map)/4-1/4))

RESUMEN
#Constantes: 3
#Comparables: 2
#Incomparables: 5
(9, 9, '470', {'MailServerImp.init': (True, '3'), 'MailServerImp.addUser': (True, '18+4*nat(max(users)/2-1/2)'), 'UserImp.receive': (True, '4'), 'AddressBookImp.getUserAddress': (True, '8+nat(max(users)/4-1/4)'), 'MailServerImp.notify': (True, '34+3*nat(max(listUsers)/2-1/2)+nat(max(users)/4-1/4)'), 'UserImp.init': (True, '2'), 'AddressBookImp.addUser': (True, '12+4*nat(max(users)/2-1/2)'), 'AddressBookImp.init': (True, '2'), 'Main.main': (True, '90+3*nat(main_mssg/2-1/2)+3*nat(max(listUsers)/2-1/2)+nat(max(users)/4-1/4)+3*nat(main_nUsers)+4*nat(max(users)/2-1/2)')})
(9, 9, 166, {'MailServerImp.init': (True, '3'), 'MailServerImp.addUser': (True, '16+6*nat(max(users)/2-1/2)'), 'UserImp.receive': (True, '4'), 'AddressBookImp.getUserAddress': (True, '5+4*nat(max(users)/4-1/4)'), 'MailServerImp.notify': (True, '9+nat(max(listUsers)/2-1/2)* (25+4*nat(max(users)/4-1/4))'), 'UserImp.init': (True, '2'), 'AddressBookImp.addUser': (True, '10+6*nat(max(users)/2-1/2)'), 'AddressBookImp.init': (True, '2'), 'Main.main': (True, '22+nat(main_nUsers)* (29+6*nat(max(users)/2-1/2))+nat(main_mssg/2-1/2)* (21+nat(max(listUsers)/2-1/2)* (25+4*nat(max(users)/4-1/4)))')})
===============================================================
MAILSERVER ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  9
Total UBs        :  9
Time             :  470
+ UB for AddressBookImp.init = 2
+ UB for MailServerImp.init = 3
+ UB for AddressBookImp.addUser = 12+4*nat(max(users)/2-1/2)
+ UB for MailServerImp.addUser = 18+4*nat(max(users)/2-1/2)
+ UB for UserImp.init = 2
+ UB for AddressBookImp.getUserAddress = 8+nat(max(users)/4-1/4)
+ UB for UserImp.receive = 4
+ UB for MailServerImp.notify = 34+3*nat(max(listUsers)/2-1/2)+nat(max(users)/4-1/4)
+ UB for Main.main = 90+3*nat(main_mssg/2-1/2)+3*nat(max(listUsers)/2-1/2)+nat(max(users)/4-1/4)+3*nat(main_nUsers)+4*nat(max(users)/2-1/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  9
Total UBs         :  9
Time              :  166
+ UB for AddressBookImp.init = 2
+ UB for MailServerImp.init = 3
+ UB for AddressBookImp.addUser = 10+6*nat(max(users)/2-1/2)
+ UB for MailServerImp.addUser = 16+6*nat(max(users)/2-1/2)
+ UB for UserImp.init = 2
+ UB for AddressBookImp.getUserAddress = 5+4*nat(max(users)/4-1/4)
+ UB for UserImp.receive = 4
+ UB for MailServerImp.notify = 9+nat(max(listUsers)/2-1/2)* (25+4*nat(max(users)/4-1/4))
+ UB for Main.main = 22+nat(main_nUsers)* (29+6*nat(max(users)/2-1/2))+nat(main_mssg/2-1/2)* (21+nat(max(listUsers)/2-1/2)* (25+4*nat(max(users)/4-1/4)))



Comparison
~~~~~~~~~~~
AddressBookImp.init :  RG == OC,constant
    RG: 2
    OC: 2

MailServerImp.init :  RG == OC,constant
    RG: 3
    OC: 3

AddressBookImp.addUser :  RG != OC,ratio(0.6808891070280937)
    RG: 12+4*nat(max(users)/2-1/2)
    OC: 10+6*nat(max(users)/2-1/2)

MailServerImp.addUser :  RG != OC,ratio(0.6850082111676871)
    RG: 18+4*nat(max(users)/2-1/2)
    OC: 16+6*nat(max(users)/2-1/2)

UserImp.init :  RG == OC,constant
    RG: 2
    OC: 2

AddressBookImp.getUserAddress :  RG != OC,ratio(0.3075186748832726)
    RG: 8+nat(max(users)/4-1/4)
    OC: 5+4*nat(max(users)/4-1/4)

UserImp.receive :  RG == OC,constant
    RG: 4
    OC: 4

MailServerImp.notify :  RG != OC,ratio(0.038339291154789075)
    RG: 34+3*nat(max(listUsers)/2-1/2)+nat(max(users)/4-1/4)
    OC: 9+nat(max(listUsers)/2-1/2)* (25+4*nat(max(users)/4-1/4))

Main.main :  RG != OC,ratio(0.0006521855958285387)
    RG: 90+3*nat(main_mssg/2-1/2)+3*nat(max(listUsers)/2-1/2)+nat(max(users)/4-1/4)+3*nat(main_nUsers)+4*nat(max(users)/2-1/2)
    OC: 22+nat(main_nUsers)* (29+6*nat(max(users)/2-1/2))+nat(main_mssg/2-1/2)* (21+nat(max(listUsers)/2-1/2)* (25+4*nat(max(users)/4-1/4)))

RESUMEN
#Constantes: 4
#Comparables: 5
#Incomparables: 0
(16, 16, '18714', {'DataBaseImpl.listFiles': (True, '9+2*nat(max(dbT)/4-1/4)'), 'Node.setAdmin': (True, '3'), 'Node.run2': (True, '203+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)'), 'Node.getPack': (True, '25+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)'), 'Node.availFiles': (True, '47+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)'), 'DataBaseImpl.storeFile': (True, '5'), 'DataBaseImpl.getLength': (True, '16+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)'), 'OurTopology.init': (True, '5'), 'Node.getLength': (True, '21+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)'), 'DataBaseImpl.getFile': (True, '8+nat(max(dbT)/4-1/4)'), 'Main.main': (True, '1023+2*nat(main_nruns)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)'), 'Node.reqFile': (True, '75+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)'), 'Node.enquire': (True, '14+2*nat(max(dbT)/4-1/4)'), 'OurTopology.getNeighbors': (True, '42'), 'Node.init': (True, '7'), 'DataBaseImpl.init': (True, '2')})
(16, 16, 1589, {'DataBaseImpl.listFiles': (True, '6+5*nat(max(dbT)/4-1/4)'), 'Node.setAdmin': (True, '3'), 'Node.run2': (True, '85+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)'), 'Node.getPack': (True, '17+4*nat(max(dbT)/4-1/4)+9*nat(pNbr)'), 'Node.availFiles': (True, '8+nat(sList/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))'), 'DataBaseImpl.storeFile': (True, '5'), 'DataBaseImpl.getLength': (True, '9+4*nat(max(dbT)/4-1/4)+6*nat(-fId/2+max(dbT)/2-2)'), 'OurTopology.init': (True, '5'), 'Node.getLength': (True, '14+4*nat(max(dbT)/4-1/4)+6*nat(-fId/2+max(dbT)/2-2)'), 'DataBaseImpl.getFile': (True, '5+4*nat(max(dbT)/4-1/4)'), 'Main.main': (True, '302+nat(main_nruns)* (349+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2))'), 'Node.reqFile': (True, '0'), 'Node.enquire': (True, '11+5*nat(max(dbT)/4-1/4)'), 'OurTopology.getNeighbors': (True, '42'), 'Node.init': (True, '7'), 'DataBaseImpl.init': (True, '2')})
===============================================================
PEERTOPEER ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  16
Total UBs        :  16
Time             :  18714
+ UB for DataBaseImpl.init = 2
+ UB for Node.init = 7
+ UB for Node.setAdmin = 3
+ UB for OurTopology.init = 5
+ UB for DataBaseImpl.listFiles = 9+2*nat(max(dbT)/4-1/4)
+ UB for Node.enquire = 14+2*nat(max(dbT)/4-1/4)
+ UB for Node.availFiles = 47+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)
+ UB for OurTopology.getNeighbors = 42
+ UB for DataBaseImpl.storeFile = 5
+ UB for DataBaseImpl.getLength = 16+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)
+ UB for Node.getLength = 21+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)
+ UB for DataBaseImpl.getFile = 8+nat(max(dbT)/4-1/4)
+ UB for Node.getPack = 25+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)
+ UB for Node.reqFile = 75+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)
+ UB for Node.run2 = 203+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)
+ UB for Main.main = 1023+2*nat(main_nruns)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)



ORIGINAL COST
-----------------------------
Valid UBs         :  16
Total UBs         :  16
Time              :  1589
+ UB for DataBaseImpl.init = 2
+ UB for Node.init = 7
+ UB for Node.setAdmin = 3
+ UB for OurTopology.init = 5
+ UB for DataBaseImpl.listFiles = 6+5*nat(max(dbT)/4-1/4)
+ UB for Node.enquire = 11+5*nat(max(dbT)/4-1/4)
+ UB for Node.availFiles = 8+nat(sList/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))
+ UB for OurTopology.getNeighbors = 42
+ UB for DataBaseImpl.storeFile = 5
+ UB for DataBaseImpl.getLength = 9+4*nat(max(dbT)/4-1/4)+6*nat(-fId/2+max(dbT)/2-2)
+ UB for Node.getLength = 14+4*nat(max(dbT)/4-1/4)+6*nat(-fId/2+max(dbT)/2-2)
+ UB for DataBaseImpl.getFile = 5+4*nat(max(dbT)/4-1/4)
+ UB for Node.getPack = 17+4*nat(max(dbT)/4-1/4)+9*nat(pNbr)
+ UB for Node.reqFile = 0
+ UB for Node.run2 = 85+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)
+ UB for Main.main = 302+nat(main_nruns)* (349+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2))



Comparison
~~~~~~~~~~~
DataBaseImpl.init :  RG == OC,constant
    RG: 2
    OC: 2

Node.init :  RG == OC,constant
    RG: 7
    OC: 7

Node.setAdmin :  RG == OC,constant
    RG: 3
    OC: 3

OurTopology.init :  RG == OC,constant
    RG: 5
    OC: 5

DataBaseImpl.listFiles :  RG != OC,ratio(0.4286585929568034)
    RG: 9+2*nat(max(dbT)/4-1/4)
    OC: 6+5*nat(max(dbT)/4-1/4)

Node.enquire :  RG != OC,ratio(0.434291665422984)
    RG: 14+2*nat(max(dbT)/4-1/4)
    OC: 11+5*nat(max(dbT)/4-1/4)

Node.availFiles :  different_vars,incomparable([max(dbT),max(myNeighbors)],[max(myNeighbors),max(dbT),sList])
    RG: 47+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)
    OC: 8+nat(sList/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))

OurTopology.getNeighbors :  RG == OC,constant
    RG: 42
    OC: 42

DataBaseImpl.storeFile :  RG == OC,constant
    RG: 5
    OC: 5

DataBaseImpl.getLength :  different_vars,incomparable([min(file),max(dbT)],[fId,max(dbT)])
    RG: 16+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)
    OC: 9+4*nat(max(dbT)/4-1/4)+6*nat(-fId/2+max(dbT)/2-2)

Node.getLength :  different_vars,incomparable([min(file),max(dbT)],[fId,max(dbT)])
    RG: 21+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)
    OC: 14+4*nat(max(dbT)/4-1/4)+6*nat(-fId/2+max(dbT)/2-2)

DataBaseImpl.getFile :  RG != OC,ratio(0.29823484562866726)
    RG: 8+nat(max(dbT)/4-1/4)
    OC: 5+4*nat(max(dbT)/4-1/4)

Node.getPack :  different_vars,incomparable([max(dbT),max(file)],[pNbr,max(dbT)])
    RG: 25+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)
    OC: 17+4*nat(max(dbT)/4-1/4)+9*nat(pNbr)

Node.reqFile :  different_vars,incomparable([min(file),max(dbT),max(file)],[])
    RG: 75+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)
    OC: 0

Node.run2 :  different_vars,incomparable([max(catalog),max(myNeighbors),min(file),max(dbT),max(file)],[max(dbT),max(myNeighbors)])
    RG: 203+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)
    OC: 85+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)

Main.main :  different_vars,incomparable([max(catalog),max(myNeighbors),min(file),max(dbT),max(file),main_nruns],[max(dbT),max(myNeighbors),main_nruns])
    RG: 1023+2*nat(main_nruns)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)+3*nat(max(file))+4*nat(max(file)-1)+nat(max(dbT)/4-1/4)+2*nat(max(dbT)/2-min(file)/2-2)+nat(max(dbT)/4-1/4)+nat(max(myNeighbors)/4-1/4)* (13+6*nat(max(catalog)/2-5/2))+6*nat(max(catalog)/2-5/2)+8*nat(max(myNeighbors)/2-1/2)+nat(max(myNeighbors)/2-3/2)+2*nat(max(dbT)/4-1/4)
    OC: 302+nat(main_nruns)* (349+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2)+nat(max(myNeighbors)/2-1/2)* (40+5*nat(max(dbT)/4-1/4)+5*nat(max(myNeighbors)/2-1/2))+nat(max(myNeighbors)/4-1/4)* (15+7*nat(max(myNeighbors)/2-5/2))+7*nat(max(myNeighbors)/2-5/2))

RESUMEN
#Constantes: 6
#Comparables: 3
#Incomparables: 7

(3, 3, '50', {'Fact.fact': (True, '16+10*nat(main_n)'), 'Main.main': (True, '23+10*nat(main_n)'), 'Fact.init': (True, '1')})
(3, 3, 22, {'Fact.fact': (True, '10+16*nat(n)'), 'Main.main': (True, '18+16*nat(main_n)'), 'Fact.init': (True, '1')})
===============================================================
FACT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  3
Total UBs        :  3
Time             :  50
+ UB for Fact.fact = 16+10*nat(main_n)
+ UB for Fact.init = 1
+ UB for Main.main = 23+10*nat(main_n)



ORIGINAL COST
-----------------------------
Valid UBs         :  3
Total UBs         :  3
Time              :  22
+ UB for Fact.fact = 10+16*nat(n)
+ UB for Fact.init = 1
+ UB for Main.main = 18+16*nat(main_n)



Comparison
~~~~~~~~~~~
Fact.fact :  different_vars,incomparable([main_n],[n])
    RG: 16+10*nat(main_n)
    OC: 10+16*nat(n)

Fact.init :  RG == OC,constant
    RG: 1
    OC: 1

Main.main :  RG != OC,ratio(0.6308813075214548)
    RG: 23+10*nat(main_n)
    OC: 18+16*nat(main_n)

RESUMEN
#Constantes: 1
#Comparables: 1
#Incomparables: 1
(3, 3, '51', {'Fact.fact': (True, '19+10*nat(main_n)'), 'Main.main': (True, '26+10*nat(main_n)'), 'Fact.init': (True, '1')})
(3, 3, 22, {'Fact.fact': (True, '10+20*nat(n)'), 'Main.main': (True, '18+20*nat(main_n)'), 'Fact.init': (True, '1')})
===============================================================
COSTLY FACT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  3
Total UBs        :  3
Time             :  51
+ UB for Fact.init = 1
+ UB for Fact.fact = 19+10*nat(main_n)
+ UB for Main.main = 26+10*nat(main_n)



ORIGINAL COST
-----------------------------
Valid UBs         :  3
Total UBs         :  3
Time              :  22
+ UB for Fact.init = 1
+ UB for Fact.fact = 10+20*nat(n)
+ UB for Main.main = 18+20*nat(main_n)



Comparison
~~~~~~~~~~~
Fact.init :  RG == OC,constant
    RG: 1
    OC: 1

Fact.fact :  different_vars,incomparable([main_n],[n])
    RG: 19+10*nat(main_n)
    OC: 10+20*nat(n)

Main.main :  RG != OC,ratio(0.5078275130680459)
    RG: 26+10*nat(main_n)
    OC: 18+20*nat(main_n)

RESUMEN
#Constantes: 1
#Comparables: 1
#Incomparables: 1
(7, 7, '105', {'WorkerImp.work': (True, '12'), 'DBimp.init': (True, '3'), 'WorkerImp.ping': (True, '2'), 'DBimp.register': (True, '12'), 'DBimp.getData': (True, '7'), 'WorkerImp.init': (True, '2'), 'Main.main': (True, '38')})
(7, 7, 25, {'WorkerImp.work': (True, '12'), 'DBimp.init': (True, '3'), 'WorkerImp.ping': (True, '2'), 'DBimp.register': (True, '12'), 'DBimp.getData': (True, '7'), 'WorkerImp.init': (True, '2'), 'Main.main': (True, '40')})
===============================================================
DB PROTOCOL
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  7
Total UBs        :  7
Time             :  105
+ UB for DBimp.init = 3
+ UB for WorkerImp.ping = 2
+ UB for DBimp.register = 12
+ UB for WorkerImp.init = 2
+ UB for DBimp.getData = 7
+ UB for WorkerImp.work = 12
+ UB for Main.main = 38



ORIGINAL COST
-----------------------------
Valid UBs         :  7
Total UBs         :  7
Time              :  25
+ UB for DBimp.init = 3
+ UB for WorkerImp.ping = 2
+ UB for DBimp.register = 12
+ UB for WorkerImp.init = 2
+ UB for DBimp.getData = 7
+ UB for WorkerImp.work = 12
+ UB for Main.main = 40



Comparison
~~~~~~~~~~~
DBimp.init :  RG == OC,constant
    RG: 3
    OC: 3

WorkerImp.ping :  RG == OC,constant
    RG: 2
    OC: 2

DBimp.register :  RG == OC,constant
    RG: 12
    OC: 12

WorkerImp.init :  RG == OC,constant
    RG: 2
    OC: 2

DBimp.getData :  RG == OC,constant
    RG: 7
    OC: 7

WorkerImp.work :  RG == OC,constant
    RG: 12
    OC: 12

Main.main :  RG <= OC,constant
    RG: 38
    OC: 40

RESUMEN
#Constantes: 7
#Comparables: 0
#Incomparables: 0
(10, 10, '91', {'Barber.cuts': (True, '2'), 'Client.init': (True, '1'), 'Barber.sleeps': (True, '10'), 'Chair.init': (True, '1'), 'Chair.iscleaned': (True, '2'), 'Client.wakesup': (True, '9'), 'Client.sits': (True, '2'), 'Main.main': (True, '42'), 'Chair.takenby': (True, '6'), 'Barber.init': (True, '1')})
(10, 10, 35, {'Barber.cuts': (True, '2'), 'Client.init': (True, '1'), 'Barber.sleeps': (True, '10'), 'Chair.init': (True, '1'), 'Chair.iscleaned': (True, '2'), 'Client.wakesup': (True, '9'), 'Client.sits': (True, '2'), 'Main.main': (True, '45'), 'Chair.takenby': (True, '6'), 'Barber.init': (True, '1')})
===============================================================
SLEEPING BARBER
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  10
Total UBs        :  10
Time             :  91
+ UB for Barber.init = 1
+ UB for Chair.init = 1
+ UB for Client.sits = 2
+ UB for Chair.takenby = 6
+ UB for Barber.sleeps = 10
+ UB for Client.init = 1
+ UB for Barber.cuts = 2
+ UB for Chair.iscleaned = 2
+ UB for Client.wakesup = 9
+ UB for Main.main = 42



ORIGINAL COST
-----------------------------
Valid UBs         :  10
Total UBs         :  10
Time              :  35
+ UB for Barber.init = 1
+ UB for Chair.init = 1
+ UB for Client.sits = 2
+ UB for Chair.takenby = 6
+ UB for Barber.sleeps = 10
+ UB for Client.init = 1
+ UB for Barber.cuts = 2
+ UB for Chair.iscleaned = 2
+ UB for Client.wakesup = 9
+ UB for Main.main = 45



Comparison
~~~~~~~~~~~
Barber.init :  RG == OC,constant
    RG: 1
    OC: 1

Chair.init :  RG == OC,constant
    RG: 1
    OC: 1

Client.sits :  RG == OC,constant
    RG: 2
    OC: 2

Chair.takenby :  RG == OC,constant
    RG: 6
    OC: 6

Barber.sleeps :  RG == OC,constant
    RG: 10
    OC: 10

Client.init :  RG == OC,constant
    RG: 1
    OC: 1

Barber.cuts :  RG == OC,constant
    RG: 2
    OC: 2

Chair.iscleaned :  RG == OC,constant
    RG: 2
    OC: 2

Client.wakesup :  RG == OC,constant
    RG: 9
    OC: 9

Main.main :  RG <= OC,constant
    RG: 42
    OC: 45

RESUMEN
#Constantes: 10
#Comparables: 0
#Incomparables: 0
(6, 6, '116', {'Node.receivePair': (True, '3'), 'Node.makePair': (True, '22'), 'Factory.init': (True, '2'), 'Node.init': (True, '1'), 'Factory.pairs': (True, '18'), 'Main.main': (True, '40+2*nat(main_n)')})
(6, 6, 35, {'Node.receivePair': (True, '3'), 'Node.makePair': (True, '22'), 'Factory.init': (True, '2'), 'Node.init': (True, '1'), 'Factory.pairs': (True, '18'), 'Main.main': (True, '12+32*nat(main_n)')})
===============================================================
PAIRING PROBLEM
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  6
Total UBs        :  6
Time             :  116
+ UB for Factory.init = 2
+ UB for Node.init = 1
+ UB for Node.receivePair = 3
+ UB for Factory.pairs = 18
+ UB for Node.makePair = 22
+ UB for Main.main = 40+2*nat(main_n)



ORIGINAL COST
-----------------------------
Valid UBs         :  6
Total UBs         :  6
Time              :  35
+ UB for Factory.init = 2
+ UB for Node.init = 1
+ UB for Node.receivePair = 3
+ UB for Factory.pairs = 18
+ UB for Node.makePair = 22
+ UB for Main.main = 12+32*nat(main_n)



Comparison
~~~~~~~~~~~
Factory.init :  RG == OC,constant
    RG: 2
    OC: 2

Node.init :  RG == OC,constant
    RG: 1
    OC: 1

Node.receivePair :  RG == OC,constant
    RG: 3
    OC: 3

Factory.pairs :  RG == OC,constant
    RG: 18
    OC: 18

Node.makePair :  RG == OC,constant
    RG: 22
    OC: 22

Main.main :  RG != OC,ratio(0.0876168397102156)
    RG: 40+2*nat(main_n)
    OC: 12+32*nat(main_n)

RESUMEN
#Constantes: 5
#Comparables: 1
#Incomparables: 0
(6, 6, '194', {'TaskQueue.init': (True, '2'), 'ProcC.startTask': (True, '2'), 'TaskQueue.consumeAsync': (True, '32+4*nat(max(pending)/2-1/2)+3*nat(main_ps/2-1/2)'), 'TaskQueue.addTasks': (True, '29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)'), 'TaskQueue.addTask': (True, '14+nat(max(pending)/2-3/2)'), 'Main.main': (True, '69+4*nat(max(pending)/2-1/2)+3*nat(main_ps/2-1/2)+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)')})
(6, 6, 77, {'TaskQueue.init': (True, '2'), 'ProcC.startTask': (True, '2'), 'TaskQueue.consumeAsync': (True, '7+nat(max(pending)/2-1/2)* (19+13*nat(ps/2-1/2))'), 'TaskQueue.addTasks': (True, '6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))'), 'TaskQueue.addTask': (True, '10+5*nat(max(pending)/2-1/2)'), 'Main.main': (True, '22+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+nat(max(pending)/2-1/2)* (19+13*nat(main_ps/2-1/2))')})
===============================================================
RUNNING1 ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  6
Total UBs        :  6
Time             :  194
+ UB for TaskQueue.addTask = 14+nat(max(pending)/2-3/2)
+ UB for TaskQueue.addTasks = 29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
+ UB for ProcC.startTask = 2
+ UB for TaskQueue.consumeAsync = 32+4*nat(max(pending)/2-1/2)+3*nat(main_ps/2-1/2)
+ UB for TaskQueue.init = 2
+ UB for Main.main = 69+4*nat(max(pending)/2-1/2)+3*nat(main_ps/2-1/2)+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  6
Total UBs         :  6
Time              :  77
+ UB for TaskQueue.addTask = 10+5*nat(max(pending)/2-1/2)
+ UB for TaskQueue.addTasks = 6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))
+ UB for ProcC.startTask = 2
+ UB for TaskQueue.consumeAsync = 7+nat(max(pending)/2-1/2)* (19+13*nat(ps/2-1/2))
+ UB for TaskQueue.init = 2
+ UB for Main.main = 22+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+nat(max(pending)/2-1/2)* (19+13*nat(main_ps/2-1/2))



Comparison
~~~~~~~~~~~
TaskQueue.addTask :  RG != OC,ratio(0.22042248852163582)
    RG: 14+nat(max(pending)/2-3/2)
    OC: 10+5*nat(max(pending)/2-1/2)

TaskQueue.addTasks :  different_vars,incomparable([max(pending),main_l],[max(pending),list])
    RG: 29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
    OC: 6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))

ProcC.startTask :  RG == OC,constant
    RG: 2
    OC: 2

TaskQueue.consumeAsync :  different_vars,incomparable([main_ps,max(pending)],[ps,max(pending)])
    RG: 32+4*nat(max(pending)/2-1/2)+3*nat(main_ps/2-1/2)
    OC: 7+nat(max(pending)/2-1/2)* (19+13*nat(ps/2-1/2))

TaskQueue.init :  RG == OC,constant
    RG: 2
    OC: 2

Main.main :  RG != OC,ratio(0.007255512558157737)
    RG: 69+4*nat(max(pending)/2-1/2)+3*nat(main_ps/2-1/2)+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
    OC: 22+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+nat(max(pending)/2-1/2)* (19+13*nat(main_ps/2-1/2))

RESUMEN
#Constantes: 2
#Comparables: 2
#Incomparables: 2
(6, 6, '172', {'TaskQueue.init': (True, '2'), 'TaskQueue.consumeSync': (True, '24+4*nat(max(pending)/2-1/2)'), 'ProcC.startTask': (True, '2'), 'TaskQueue.addTasks': (True, '29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)'), 'TaskQueue.addTask': (True, '14+nat(max(pending)/2-3/2)'), 'Main.main': (True, '62+4*nat(max(pending)/2-1/2)+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)')})
(6, 6, 57, {'TaskQueue.init': (True, '2'), 'TaskQueue.consumeSync': (True, '7+21*nat(max(pending)/2-1/2)'), 'ProcC.startTask': (True, '2'), 'TaskQueue.addTasks': (True, '6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))'), 'TaskQueue.addTask': (True, '10+5*nat(max(pending)/2-1/2)'), 'Main.main': (True, '23+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+21*nat(max(pending)/2-1/2)')})
===============================================================
RUNNING2 ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  6
Total UBs        :  6
Time             :  172
+ UB for TaskQueue.addTask = 14+nat(max(pending)/2-3/2)
+ UB for TaskQueue.addTasks = 29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
+ UB for ProcC.startTask = 2
+ UB for TaskQueue.consumeSync = 24+4*nat(max(pending)/2-1/2)
+ UB for TaskQueue.init = 2
+ UB for Main.main = 62+4*nat(max(pending)/2-1/2)+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  6
Total UBs         :  6
Time              :  57
+ UB for TaskQueue.addTask = 10+5*nat(max(pending)/2-1/2)
+ UB for TaskQueue.addTasks = 6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))
+ UB for ProcC.startTask = 2
+ UB for TaskQueue.consumeSync = 7+21*nat(max(pending)/2-1/2)
+ UB for TaskQueue.init = 2
+ UB for Main.main = 23+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+21*nat(max(pending)/2-1/2)



Comparison
~~~~~~~~~~~
TaskQueue.addTask :  RG != OC,ratio(0.23899108347288212)
    RG: 14+nat(max(pending)/2-3/2)
    OC: 10+5*nat(max(pending)/2-1/2)

TaskQueue.addTasks :  different_vars,incomparable([max(pending),main_l],[max(pending),list])
    RG: 29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
    OC: 6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))

ProcC.startTask :  RG == OC,constant
    RG: 2
    OC: 2

TaskQueue.consumeSync :  RG != OC,ratio(0.22224536731753416)
    RG: 24+4*nat(max(pending)/2-1/2)
    OC: 7+21*nat(max(pending)/2-1/2)

TaskQueue.init :  RG == OC,constant
    RG: 2
    OC: 2

Main.main :  RG != OC,ratio(0.01785228600649082)
    RG: 62+4*nat(max(pending)/2-1/2)+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
    OC: 23+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+21*nat(max(pending)/2-1/2)

RESUMEN
#Constantes: 2
#Comparables: 3
#Incomparables: 1
(6, 6, '194', {'TaskQueue.init': (True, '2'), 'TaskQueue.consumeSync': (True, '24+4*nat(max(pending)/2-1/2)* (1+nat(main_l/2-1/2))'), 'ProcC.startTask': (True, '2'), 'TaskQueue.addTasks': (True, '29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)'), 'TaskQueue.addTask': (True, '14+nat(max(pending)/2-3/2)'), 'Main.main': (True, '61+4*nat(max(pending)/2-1/2)* (1+nat(main_l/2-1/2))+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)')})
(6, 4, 49, {'TaskQueue.init': (True, '2'), 'TaskQueue.consumeSync': (False, '3+c(failed(no_rf,[scc=10,cr=entrywhile_1/4]))'), 'ProcC.startTask': (True, '2'), 'TaskQueue.addTasks': (True, '6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))'), 'TaskQueue.addTask': (True, '10+5*nat(max(pending)/2-1/2)'), 'Main.main': (False, '18+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+c(failed(no_rf,[scc=10,cr=entrywhile_1/4]))')})
===============================================================
RUNNING3 ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  6
Total UBs        :  6
Time             :  194
+ UB for TaskQueue.addTask = 14+nat(max(pending)/2-3/2)
+ UB for TaskQueue.addTasks = 29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
+ UB for ProcC.startTask = 2
+ UB for TaskQueue.consumeSync = 24+4*nat(max(pending)/2-1/2)* (1+nat(main_l/2-1/2))
+ UB for TaskQueue.init = 2
+ UB for Main.main = 61+4*nat(max(pending)/2-1/2)* (1+nat(main_l/2-1/2))+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)



ORIGINAL COST
-----------------------------
Valid UBs         :  4
Total UBs         :  6
Time              :  49
+ UB for TaskQueue.addTask = 10+5*nat(max(pending)/2-1/2)
+ UB for TaskQueue.addTasks = 6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))
+ UB for ProcC.startTask = 2
- UB for TaskQueue.consumeSync = 3+c(failed(no_rf,[scc=10,cr=entrywhile_1/4]))
+ UB for TaskQueue.init = 2
- UB for Main.main = 18+nat(main_l/2-1/2)* (22+5*nat(max(pending)/2-1/2))+c(failed(no_rf,[scc=10,cr=entrywhile_1/4]))



Comparison
~~~~~~~~~~~
TaskQueue.addTask :  RG != OC,ratio(0.22671619080833785)
    RG: 14+nat(max(pending)/2-3/2)
    OC: 10+5*nat(max(pending)/2-1/2)

TaskQueue.addTasks :  different_vars,incomparable([max(pending),main_l],[max(pending),list])
    RG: 29+3*nat(main_l/2-1/2)+nat(max(pending)/2-3/2)
    OC: 6+nat(list/2-1/2)* (22+5*nat(max(pending)/2-1/2))

ProcC.startTask :  RG == OC,constant
    RG: 2
    OC: 2

TaskQueue.init :  RG == OC,constant
    RG: 2
    OC: 2

RESUMEN
#Constantes: 2
#Comparables: 1
#Incomparables: 1
(6, 6, '155', {'A.g': (True, '2'), 'A.m2': (True, '14+3*nat(main_x)'), 'A.m3': (True, '17+3*nat(main_y)'), 'A.m1': (True, '16+4*nat(max(f))* (1+nat(main_x))'), 'Main.main': (True, '56+3*nat(main_y)+3*nat(main_x)+4*nat(max(f))* (1+nat(main_x))'), 'A.init': (True, '2')})
(6, 4, 52, {'A.g': (True, '2'), 'A.m2': (True, '6+11*nat(m)'), 'A.m3': (True, '6+14*nat(n)'), 'A.m1': (False, '3+c(failed(no_rf,[scc=2,cr=entrywhile_0/4]))'), 'Main.main': (False, '25+c(failed(no_rf,[scc=2,cr=entrywhile_0/4]))+11*nat(main_x)+14*nat(main_y)'), 'A.init': (True, '2')})
===============================================================
INTERLEAVINGS ANNOT
===============================================================

RELY GUARANTEE COST
--------------
Valid UBs        :  6
Total UBs        :  6
Time             :  155
+ UB for A.init = 2
+ UB for A.g = 2
+ UB for A.m1 = 16+4*nat(max(f))* (1+nat(main_x))
+ UB for A.m2 = 14+3*nat(main_x)
+ UB for A.m3 = 17+3*nat(main_y)
+ UB for Main.main = 56+3*nat(main_y)+3*nat(main_x)+4*nat(max(f))* (1+nat(main_x))



ORIGINAL COST
-----------------------------
Valid UBs         :  4
Total UBs         :  6
Time              :  52
+ UB for A.init = 2
+ UB for A.g = 2
- UB for A.m1 = 3+c(failed(no_rf,[scc=2,cr=entrywhile_0/4]))
+ UB for A.m2 = 6+11*nat(m)
+ UB for A.m3 = 6+14*nat(n)
- UB for Main.main = 25+c(failed(no_rf,[scc=2,cr=entrywhile_0/4]))+11*nat(main_x)+14*nat(main_y)



Comparison
~~~~~~~~~~~
A.init :  RG == OC,constant
    RG: 2
    OC: 2

A.g :  RG == OC,constant
    RG: 2
    OC: 2

A.m2 :  different_vars,incomparable([main_x],[m])
    RG: 14+3*nat(main_x)
    OC: 6+11*nat(m)

A.m3 :  different_vars,incomparable([main_y],[n])
    RG: 17+3*nat(main_y)
    OC: 6+14*nat(n)

RESUMEN
#Constantes: 2
#Comparables: 0
#Incomparables: 2
