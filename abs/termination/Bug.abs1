module Bug;

interface A {
  Unit loop();
  Unit incr();
}

class AImpl(Int field) implements A {


// This loop doesn't terminate, but using the naive optimization we say
// it's terminating because:
// a) the increment in incr() MHP with the await fut?
// b) incr() is reachable from main and loop
// c) Neither the entry point of main nor the entry point of loop MHP with the
//    await fut?, so we consider that the loop loop() doesn't matter and drop it
Unit loop(){
  while( field > 0 ){
    field = field - 1;
    Fut<Unit> fut = this ! incr();
    await fut?;
  }
}

Unit incr(){
  field = field + 1;
}

}

{
  A x = new local AImpl(12);
  x ! loop();
}
