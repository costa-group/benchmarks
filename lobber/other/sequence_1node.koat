(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f0))
(VAR x y)
(RULES

# t1
f0(x, y) -> f0(x-1, x)  :|: x > 0  && y > 0

# t2   
f0(x, y) -> f0(x, y-1)  :|: x <= 0 && y > 0

# t3
f0(x, y) -> f0(y, x)    :|: x > 0  && y <= 0

)

# Las dos versiones de LoAT obtienen OMEGA(n). 
# Aceleran las transiciones t1 y t2 y obtienen su coste lineal x e y resp.
# No encadenan estas reglas, sino que quedan en el problema límite final
# Con cualquiera de ellas se obtiene OMEGA(n)

# Si se quita t3, LoAT_antiguo hace el truco de probar por si se trata de un bucle anidado. 
# pero la regla bucle-anidado que genera luego no se puede encadenar con nada y desaparece.
# Si se quita t3, LOAT_nuevo es más listo y no llega ni a probar si se trata de un bucle anidado.

# Con el enfoque de MF, se podría demostrar como "metering function for a single location"
# MF(x,y) = x + y
# En este caso la transición t3 es imprescindible porque si no no se puede demostrar el 
# "at least zero exit" (cuando x>0, y<=0 no podrías seguir pero no es cierto que x+y <= 0)
